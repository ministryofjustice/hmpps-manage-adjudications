{% from "govuk/components/table/macro.njk" import govukTable %}

{% macro awardPunishmentsTable(dataArray, redirectAfterRemoveUrl, chargeNumber, readOnly, consecutiveReportLinkAvailable) %}
  {% set rows = [] %}
  {% for data in dataArray %}
    {% set redisId = data.redisId %}
    {% set punishmentLocked = data.canRemove === false %}

    {% set typeColumnValue = data.type | convertPunishmentType(data.stoppagePercentage, data.privilegeType, data.otherPrivilege) %}

    {% set removeColumnValue = '<p class="govuk-body govuk-!-margin-bottom-1"><a href="'+redirectAfterRemoveUrl+redisId+'" data-qa="delete-punishment" class="govuk-link">Remove <span class="govuk-visually-hidden">' + typeColumnValue + '</span></a></p>' %}

    {% set changeUrl = adjudicationUrls
      .damagesAmount
      .urls
      .edit(chargeNumber, redisId)if data
      .type === PunishmentType
      .DAMAGES_OWED else 
        adjudicationUrls
          .punishment
          .urls
          .edit(chargeNumber, redisId) %}

    {% set changeColumnValue = '<p class="govuk-body govuk-!-margin-bottom-1"><a href="'+changeUrl+'" data-qa="edit-punishment" class="govuk-link">Change <span class="govuk-visually-hidden">'+ typeColumnValue + '</span></a></p>' %}

    {% if data.consecutiveChargeNumber %}
      {% if data.consecutiveReportAvailable and consecutiveReportLinkAvailable %}
        {% set typeColumnValue = typeColumnValue + '<br> (consecutive to charge <a data-qa="consecutive-link" href="'+ adjudicationUrls.punishmentsAndDamages.urls.review(data.consecutiveChargeNumber) +'">' + data.consecutiveChargeNumber + '</a>)' %}
      {% else %}
        {% set typeColumnValue = typeColumnValue + '<br>(consecutive to charge ' + data.consecutiveChargeNumber + ')' %}
      {% endif %}
    {% endif %}

    {% set emptyText = 'Not entered' if data.type === PunishmentType.PAYBACK else '-' %}

    {% set rows = (rows.push(
      [
          {
            html: typeColumnValue,
            classes: "columnWidth30"
          },
          {
            text: data.startDate | formatTimestampTo('D MMM YYYY') if data.startDate else '-',
            classes: "columnWidth15"
          },
          {
            text: data.endDate | formatTimestampTo('D MMM YYYY') if data.endDate else emptyText,
            classes: "columnWidth15"
          },
          {
            text: data.duration | punishmentDurationText(data.type),
            classes: "columnWidth12"
          },
          {
            text: data.suspendedUntil | formatTimestampTo('D MMM YYYY') if data.suspendedUntil else '-',
            classes: "columnWidth12"
          },
          {
            text: data.activatedFrom if data.activatedFrom else '-',
            classes: "columnWidth20"
          },
          {
            html: changeColumnValue if not readOnly and not data.activatedFrom and not punishmentLocked else '',
            classes: "changeColumn"
          },
          {
            html: removeColumnValue if not readOnly and not punishmentLocked else '',
            classes: "removeColumn"
          }
      ]
    ), rows) %}
  {% endfor %}

  {% if rows.length %}
        {{ govukTable({
        head: [
          {
            text: "Type"
          },
          {
            text: "Start date"
          },
          {
            text: "Last day"
          },
          {
            text: "Duration"
          },
          {
            text: "Suspended until"
          },
          {
            text: "Activated from report"
          },
          {
            text: null
          },
          {
            text: null
          }
        ],
        rows: rows,
        attributes: {"data-qa": "punishments-table"}
      }) }}
  {% else %}
    <p class="govuk-body">There are currently no punishments for this adjudication. You can activate <br>existing suspended punishments and/or add new punishments.</p>
  {% endif %}
{% endmacro %}